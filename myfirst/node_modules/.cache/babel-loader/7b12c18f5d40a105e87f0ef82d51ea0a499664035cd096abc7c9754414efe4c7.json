{"ast":null,"code":"var _jsxFileName = \"C:\\\\react projects\\\\contact management\\\\myfirst\\\\src\\\\components\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport api from '../api/contacts';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { v4 as uuidv4 } from 'uuid';\nimport './App.css';\nimport Header from './Header';\nimport AddContact from './AddContact';\nimport ContactList from './ContactList';\nimport ContactDetails from './ContactDescription';\nimport { all } from 'axios';\nimport EditContact from './EditContact';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const LOCAL_STORAGE_KEY = \"contacts\";\n  const [contacts, setContacts] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n\n  //Retrive Contacts from api\n  const retrieveContacts = async () => {\n    const response = await api.get(\"/contacts\");\n    return response.data;\n  };\n  // const contacts = [\n  //   {\n  //     'id': 1,\n  //     'name': 'Pranith',\n  //     'email': 'prani@gmail.com'\n  //   },\n  //   {\n  //     'id': 2,\n  //     'name': 'Saravanan',\n  //     'email': 'saro@gmail.com'\n  //   },\n  //   {\n  //     'id': 1,\n  //     'name': 'Pavithra',\n  //     'email': 'pavi@gmail.com'\n  //   }\n  // ]\n\n  const addContactHandler = async contact => {\n    console.log(contact);\n    const request = {\n      id: uuidv4,\n      ...contact\n    };\n    const response = await api.post(\"/contacts\", request);\n    setContacts([...contacts, response.data]);\n  };\n  const updateContactHandler = async contact => {\n    const response = await api.put(`/contacts/${contact.id}`, contact);\n    const {\n      id,\n      name,\n      email\n    } = response.data;\n    setContacts(contacts.map(contact => {\n      return contact.id === id ? {\n        ...response.data\n      } : contact;\n    }));\n  };\n  const removeContactHandler = async id => {\n    await api.delete(`/contacts/${id}`);\n    const newContactList = contacts.filter(contact => {\n      return contact.id !== id;\n    });\n    setContacts(newContactList);\n  };\n  const searchHandler = searchTerm => {\n    setSearchTerm(searchTerm);\n    if (searchTerm !== \"\") {\n      const newContactList = contacts.filter(contact => {\n        return Object.values(contact).join(\" \").toLowerCase().includes(searchTerm.toLowerCase());\n      });\n      setSearchResults(newContactList);\n    } else {\n      setSearchResults(contacts);\n    }\n  };\n  useEffect(() => {\n    // try {\n    //   const getContacts = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n    //   if (Array.isArray(getContacts)) {\n    //     setContacts(getContacts);\n    //   }\n    // } catch (error) {\n    //   console.error(\"Failed to load contacts:\", error);\n    // }\n    const getAllContacts = async () => {\n      const allContacts = await retrieveContacts();\n      if (allContacts) setContacts(allContacts);\n    };\n    getAllContacts();\n  }, []);\n  useEffect(() => {\n    // if (contacts.length > 0) {\n    //   localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(contacts));\n    // }\n  }, [contacts]);\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    initial: {\n      opacity: 0,\n      y: -50\n    },\n    animate: {\n      opacity: 1,\n      y: 0\n    },\n    transition: {\n      duration: 1\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui container\",\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            exact: true,\n            render: props => /*#__PURE__*/_jsxDEV(ContactList, {\n              ...props,\n              contacts: searchTerm.length < 1 ? contacts : searchResults,\n              getContactId: removeContactHandler,\n              term: searchTerm,\n              searchKeyword: searchHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 53\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/add\",\n            render: props => /*#__PURE__*/_jsxDEV(AddContact, {\n              ...props,\n              addContactHandler: addContactHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 50\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/edit\",\n            render: props => /*#__PURE__*/_jsxDEV(EditContact, {\n              ...props,\n              updateContactHandler: updateContactHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 51\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/contact/:id\",\n            component: ContactDetails\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"kpecTpqg2u2phJc7RwMHIqjxK8M=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","motion","api","BrowserRouter","Router","Switch","Route","v4","uuidv4","Header","AddContact","ContactList","ContactDetails","all","EditContact","jsxDEV","_jsxDEV","App","_s","LOCAL_STORAGE_KEY","contacts","setContacts","searchTerm","setSearchTerm","searchResults","setSearchResults","retrieveContacts","response","get","data","addContactHandler","contact","console","log","request","id","post","updateContactHandler","put","name","email","map","removeContactHandler","delete","newContactList","filter","searchHandler","Object","values","join","toLowerCase","includes","getAllContacts","allContacts","div","initial","opacity","y","animate","transition","duration","children","className","fileName","_jsxFileName","lineNumber","columnNumber","path","exact","render","props","length","getContactId","term","searchKeyword","component","_c","$RefreshReg$"],"sources":["C:/react projects/contact management/myfirst/src/components/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport api from '../api/contacts';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { v4 as uuidv4 } from 'uuid';\nimport './App.css';\nimport Header from './Header';\nimport AddContact from './AddContact';\nimport ContactList from './ContactList';\nimport ContactDetails from './ContactDescription';\nimport { all } from 'axios';\nimport EditContact from './EditContact';\n\n\nfunction App() {\n   const LOCAL_STORAGE_KEY = \"contacts\";\n  const [contacts, setContacts] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n\n  //Retrive Contacts from api\n  const retrieveContacts = async () => {\n    const response = await api.get(\"/contacts\");\n    return response.data;\n  }\n  // const contacts = [\n  //   {\n  //     'id': 1,\n  //     'name': 'Pranith',\n  //     'email': 'prani@gmail.com'\n  //   },\n  //   {\n  //     'id': 2,\n  //     'name': 'Saravanan',\n  //     'email': 'saro@gmail.com'\n  //   },\n  //   {\n  //     'id': 1,\n  //     'name': 'Pavithra',\n  //     'email': 'pavi@gmail.com'\n  //   }\n  // ]\n \n   const addContactHandler = async (contact) => {\n    console.log(contact);\n    const request = {\n      id: uuidv4,\n      ...contact\n    }\n\n    const response = await api.post(\"/contacts\", request);\n\n    setContacts([...contacts, response.data]);\n   };\n  \n  \n  const updateContactHandler = async (contact) => {\n    const response = await api.put(`/contacts/${contact.id}`, contact);\n    const { id, name, email } = response.data;\n    setContacts(\n      contacts.map((contact) => {\n        return contact.id === id ? { ...response.data } : contact;\n      })\n    );\n};\n\n  const removeContactHandler = async (id) => {\n    await api.delete(`/contacts/${id}`);\n    const newContactList = contacts.filter((contact) => {\n      return contact.id !== id;\n    });\n    setContacts(newContactList);\n  };\n\n  const searchHandler = (searchTerm) => {\n    setSearchTerm(searchTerm);\n    if (searchTerm !== \"\") {\n      const newContactList = contacts.filter((contact) => {\n        return Object.values(contact).join(\" \").toLowerCase().includes(searchTerm.toLowerCase());\n      });\n      setSearchResults(newContactList);\n    } else {\n      setSearchResults(contacts)\n    }\n  }\n useEffect(() => {\n  // try {\n  //   const getContacts = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n  //   if (Array.isArray(getContacts)) {\n  //     setContacts(getContacts);\n  //   }\n  // } catch (error) {\n  //   console.error(\"Failed to load contacts:\", error);\n    // }\n    const getAllContacts = async () => {\n      const allContacts = await retrieveContacts();\n      if (allContacts) setContacts(allContacts);\n    };\n   getAllContacts();\n}, []);\n\nuseEffect(() => {\n  // if (contacts.length > 0) {\n  //   localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(contacts));\n  // }\n}, [contacts]);\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: -50 }}\n      animate={{ opacity: 1, y: 0 }}\n      transition={{ duration: 1 }}\n    >\n    <div className='ui container'>\n      <Router>\n        <Header />\n        \n        <Switch>\n          <Route path=\"/\" exact render={(props) => (<ContactList {...props} contacts={searchTerm.length < 1 ? contacts : searchResults} getContactId={removeContactHandler} term={searchTerm} searchKeyword={searchHandler} />)} />\n          <Route path=\"/add\" render={(props) => (<AddContact {...props} addContactHandler={addContactHandler} />)} />\n          <Route path=\"/edit\" render={(props) => (<EditContact {...props} updateContactHandler={updateContactHandler} />)} />\n          <Route path=\"/contact/:id\" component={ContactDetails} />\n        {/* <Route path=\"/add\"  component={AddContact} />\n\n        <Route path=\"/\" exact component={ContactList} /> */}\n          \n         \n          \n\n        </Switch>\n\n      </Router>\n      {/* <Header />\n       <AddContact addContactHandler={addContactHandler} />\n      <ContactList contacts={contacts} getContactId={removeContactHandler} /> */}\n      </div>\n      </motion.div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}